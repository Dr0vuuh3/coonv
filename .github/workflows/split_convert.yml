name: Parallel Segment Encoding

on:
  workflow_dispatch:

jobs:
  list-segments:
    name: List video segments
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONF }}

      - name: Generate segment matrix
        id: set-matrix
        env:
          SEGMENT_DURATION: 240
        run: |
          sudo apt-get purge -y man-db
          sudo apt install ffmpeg
          mkdir -p tmp
          rclone lsf BDoDrive:dwhelper --files-only --include "*.mp4" --include "*.mkv" --include "*.mov" --include "*.avi" --include "*.webm" > tmp/filelist.txt
          echo "[" > tmp/matrix.json
          while IFS= read -r file; do
            duration=$(rclone cat "BDoDrive:dwhelper/$file" | ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 -)
            duration=${duration%.*}
            total_segments=$(( (duration + SEGMENT_DURATION - 1) / SEGMENT_DURATION ))
            for (( i=0; i<total_segments; i++ )); do
              ss=$(( i * SEGMENT_DURATION ))
              t=$SEGMENT_DURATION
              [ $((ss + t)) -gt $duration ] && t=$((duration - ss))
              echo "{\"file\": \"$file\", \"ss\": $ss, \"t\": $t}," >> tmp/matrix.json
            done
          done < tmp/filelist.txt
          sed -i '$ s/,$//' tmp/matrix.json
          echo "]" >> tmp/matrix.json

          matrix_json=$(cat tmp/matrix.json | jq -c '.')
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$matrix_json" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  convert-audios:
    name: Convert full audio
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONF }}

      - name: Run audio conversion
        run: |
          mkdir -p scripts
          rclone copy DBOX:scripts ./scripts
          chmod +x ./scripts/convert_audio.sh
          ./scripts/convert_audio.sh
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}

