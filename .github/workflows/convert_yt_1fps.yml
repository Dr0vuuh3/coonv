name: Convert YouTube Videos 1fps

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read URLs and set matrix
        id: set-matrix
        run: |
          urls=$(cat yt_urls.txt | grep -v '^#' | awk NF | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "matrix=$urls"
          echo "matrix=$urls" >> $GITHUB_OUTPUT

  convert:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        url: ${{fromJson(needs.prepare.outputs.matrix)}}
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install python3 & yt-dlp
        run: |
          sudo apt-get purge -y man-db
          curl -L "https://www.dropbox.com/scl/fi/bdioefcl1dce4zs7iqqr6/ffmpeg-release-amd64-static.tar.xz?rlkey=npbqixqrbarhmuymm4ps5em45&dl=1" -o "ffmpeg.tar.xz"
          tar -xf ffmpeg.tar.xz
          sudo mv ffmpeg-*-amd64-static/ffmpeg /usr/local/bin/
          sudo chmod +x /usr/local/bin/ffmpeg
          sudo apt-get install jq python3 python3-pip
          pip install yt-dlp

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONF }}

      - name: Download YouTube video
        run: |
          mkdir -p input
          yt-dlp --cookies youtube_cookies.txt --no-playlist "${{ matrix.url }}" -S vcodec:h264,res,acodec:m4a -o "input/%(title).100s.%(ext)s"
          yt-dlp --cookies youtube_cookies.txt --no-playlist --skip-download "${{ matrix.url }}" --write-sub --write-auto-sub --sub-lang en --convert-subs srt -P "sub"
          yt-dlp --cookies youtube_cookies.txt --no-playlist --skip-download "${{ matrix.url }}" --write-thumbnail --write-description --convert-thumbnails jpg -P "desc"
          find desc -type f -name "*.description" -exec bash -c 'mv "$0" "${0%.description}.txt"' {} \;
          rclone copy ./sub BDoDrive:Here/test/sub
          rclone copy ./desc BDoDrive:Here/test/desc

      - name: Run conversion
        run: |
          mkdir -p scripts 
          rclone copy DBOX:scripts ./scripts
          chmod +x ./scripts/convert_yt_1fps.sh
          ./scripts/convert_yt_1fps.sh
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
